"use client";

import {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { useState } from "react";
import { Input } from "@/components/ui/input";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormMessage,
} from "@/components/ui/form";
import { Button } from "../ui/button";
import { zodResolver } from "@hookform/resolvers/zod";
import { useForm } from "react-hook-form";
import { z } from "zod";
import ButtonLoadingAnimation from "../loading-animations/Button-animation";
import { FaArrowRightLong } from "react-icons/fa6";
import { MdOutlineMapsHomeWork } from "react-icons/md";

const formSchema = z.object({
  hub_name: z.string().min(1, {
    message: "Hub Name is required.",
  }),
});

const EditCouponDataDialog = ({
  children,
  couponData,
}: {
  children: React.ReactNode;
  couponData: any;
}) => {
  const [loading, setLoading] = useState<boolean>(false);

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      hub_name: "",
    },
  });

  function onSubmit(values: z.infer<typeof formSchema>) {
    setLoading(true);
    form.reset();
    setLoading(false);
    window.location.reload();
  }

  return (
    <div>
      <Dialog>
        <DialogTrigger asChild>{children}</DialogTrigger>
        <DialogContent className="sm:max-w-md">
          <DialogHeader>
            <DialogTitle>Edit Coupon Data</DialogTitle>
            <DialogDescription>
              Edit coupon data here. Click submit when you&apos;re done.
            </DialogDescription>
          </DialogHeader>
          <div className="mt-5">
            <Form {...form}>
              <form
                onSubmit={form.handleSubmit(onSubmit)}
                className="space-y-8">
                <FormField
                  control={form.control}
                  name="hub_name"
                  render={({ field }) => (
                    <FormItem>
                      <FormControl>
                        <div className="relative flex items-center border pl-2 rounded-md">
                          <MdOutlineMapsHomeWork className="text-xl" />
                          <Input
                            placeholder="Enter Hub Name"
                            autoComplete="off"
                            type="text"
                            {...field}
                            className="border-none focus-visible:outline-none focus-visible:ring-0 focus-visible:ring-transparent focus-visible:ring-offset-0"
                          />
                        </div>
                      </FormControl>
                      <FormMessage />
                    </FormItem>
                  )}
                />

                <div className="pt-8">
                  <DialogFooter className="sm:justify-end flex gap-2 md:gap-0">
                    <DialogClose asChild>
                      <Button type="button" variant="destructive">
                        Close
                      </Button>
                    </DialogClose>
                    <Button type="submit" className="group">
                      {loading ? (
                        <ButtonLoadingAnimation text="Submitting" />
                      ) : (
                        <>
                          <FaArrowRightLong className="hidden md:inline-block group-hover:translate-x-6 transition-all duration-300" />
                          <span className="md:group-hover:opacity-0 group-hover:-z-10 transition-all duration-300 text-[14px] font-semibold">
                            Submit
                          </span>
                        </>
                      )}
                    </Button>
                  </DialogFooter>
                </div>
              </form>
            </Form>
          </div>
        </DialogContent>
      </Dialog>
    </div>
  );
};

export default EditCouponDataDialog;
